BROKER SCHEMA id.co.bni.mf.core.handler.list
PATH id.co.bni.common,id.co.bni.mf.common.core;
/*
*
* File name: SF_GetLinkedDebitCard.esql
*
* Purpose : Transfrom Message Response GetLinkedDebitCard from ICONS (BANCS) to XML format
*
* Authors : Teddy
*
* Date : Dec 2012
* Version : 1.0
*
* @copyright PT Bank Negara Indonesia. 2011. All rights reserved.
*
*/


CREATE COMPUTE MODULE SF_GetLinkedDebitCard_CN_divideMessage
	CREATE FUNCTION Main() RETURNS BOOLEAN BEGIN
		DECLARE totalLengthMsg,numberRecordData,cutStartRecordData,cutEndRecordData INTEGER;
		DECLARE MessageBody,newRecord ROW;
		DECLARE headerLength INTEGER 89;
		DECLARE contentGetLinkedDebitCardLength INTEGER 160;
		DECLARE index INTEGER 1; 
		DECLARE flag BOOLEAN FALSE;

		CALL CopyMessageHeaders();
		SET totalLengthMsg = LENGTH(InputRoot.BLOB.BLOB);
		SET cutStartRecordData = headerLength + (contentGetLinkedDebitCardLength)  + 1; --Skip first and second record
		SET Environment.Variables.IndexContentGetLinkedDebitCard = 1;

		SET MessageBody = InputRoot.BLOB.BLOB;
		SET numberRecordData = ((totalLengthMsg - (headerLength + contentGetLinkedDebitCardLength))/contentGetLinkedDebitCardLength);
		SET Environment.Variables.IndexFooterGetLinkedDebitCard = numberRecordData;

		WHILE index <= numberRecordData DO
			SET Environment.Variables.IndexContentGetLinkedDebitCard = index;
			SET newRecord = SUBSTRING(MessageBody FROM cutStartRecordData FOR contentGetLinkedDebitCardLength);
			SET OutputRoot.BLOB.BLOB = newRecord;
			SET cutEndRecordData = cutStartRecordData + contentGetLinkedDebitCardLength;
			SET cutStartRecordData = cutEndRecordData;
			IF index = numberRecordData THEN
				SET flag = TRUE;
				SET Environment.Variables.flag = flag;
			END IF;
			PROPAGATE TO LABEL 'ContentGetLinkedDebitCard' FINALIZE DEFAULT DELETE NONE;
			SET index = index + 1;
		END WHILE;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
END MODULE;


CREATE COMPUTE MODULE SF_GetLinkedDebitCard_CN_messageTransform
	CREATE FUNCTION Main() RETURNS BOOLEAN BEGIN
		DECLARE xsi NAMESPACE 'http://www.w3.org/2001/XMLSchema-instance';
		DECLARE bo NAMESPACE 'http://service.bni.co.id/core/bo';

		DECLARE index REFERENCE TO Environment.Variables.IndexContentGetLinkedDebitCard;
		DECLARE flag REFERENCE TO Environment.Variables.flag;

		CALL CopyMessageHeaders();
		
		DECLARE indexRecord INTEGER;
		SET indexRecord = index;
		SET Environment.Variables.content.debitCard[indexRecord] = InputRoot.MRM.debitCard;
		
		--Remove fillers
		SET Environment.Variables.content.debitCard[indexRecord].filler = NULL;
		SET Environment.Variables.content.debitCard[indexRecord].filler = NULL;
		SET Environment.Variables.content.debitCard[indexRecord].filler = NULL;
		SET Environment.Variables.content.debitCard[indexRecord].filler = NULL;
		SET Environment.Variables.content.debitCard[indexRecord].filler = NULL;
		SET Environment.Variables.content.debitCard[indexRecord].filler = NULL;
		
		IF flag = TRUE THEN
			CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
			SET OutputRoot.XMLNSC.content = Environment.Variables.content;
			SET OutputRoot.XMLNSC.content.(XMLNSC.NamespaceDecl)xmlns:xsi = xsi;
			SET OutputRoot.XMLNSC.content.(XMLNSC.Attribute)xsi:type = 'bo:CompiledGetLinkedDebitCardRes';
		ELSE
			RETURN FALSE;
		END IF;
		RETURN TRUE;
	END;
	
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
END MODULE;